---
import '@fontsource/inter/latin-400.css';
import '@fontsource/inter/latin-500.css';
import { ViewTransitions } from 'astro:transitions';
import Footer from '../components/layout/Footer.astro';
import Header from '../components/layout/Header.astro';

interface Props {
  description: string;
  title: string;
}

const { description, title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en" x-cloak x-data :class="{ 'dark': $store.theme.isDark }">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <script defer src="https://cdn.jsdelivr.net/npm/@alpinejs/collapse@3.x.x/dist/cdn.min.js"></script>
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body
    class="bg-primary-50 text-primary-950 dark:bg-primary-950 dark:text-primary-200 antialiased transition"
  >
    <Header />
    <main>
      <slot />
    </main>
    <Footer />
    <style is:global>
      [x-cloak] {
        display: none !important;
      }
    </style>
    <script>
      import Alpine from 'alpinejs';
      document.addEventListener("alpine:init", () => {

        Alpine.store('theme', {
          isDark: false,

          init() {
            this.isDark = (() => {
              if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
                return localStorage.getItem('theme') === 'dark';
              }
              if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
                return true;
              }
              return false;
            })();
          },

          toggle() {
            this.isDark = !this.isDark;
            localStorage.setItem('theme', this.isDark ? 'dark' : 'light');
          },
        });

        Alpine.data("contact", () => ({
          submitted: false,
          text: "",
          ok: false,

          async submit(e: any) {
            const formData = new FormData(e.target);
            const response = await fetch("/api/contact", {
              method: "POST",
              body: formData,
            });
            const data = await response.json();
            this.ok = response.ok;
            console.log(response.ok);
            this.submitted = true;
            this.text = data.message ?? "Message not sent"
          },
        }));
      });
    </script>
  </body>
</html>
